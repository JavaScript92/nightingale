{"version":3,"file":"protvista-navigation.js","sources":["../src/protvista-navigation.js","../src/index.js"],"sourcesContent":["import * as d3 from \"d3\";\n\nconst height = 40,\n  width = 700,\n  padding = {\n    top: 10,\n    right: 10,\n    bottom: 10,\n    left: 10\n  };\n\nclass ProtVistaNavigation extends HTMLElement {\n\n  constructor() {\n    super();\n    this._length = parseInt(this.getAttribute('length'));\n    this._start = parseInt(this.getAttribute('start')) || 1;\n    this._end = parseInt(this.getAttribute('end')) || this._length;\n    this._highlightStart = parseInt(this.getAttribute('highlightStart'));\n    this._highlightEnd = parseInt(this.getAttribute('highlightEnd'));\n  }\n\n  connectedCallback() {\n    this._createNavRuler();\n  }\n\n  static get observedAttributes() {return [\n    'length', 'start', 'end', 'highlightStart', 'highlightEnd'\n  ]; }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (oldValue !== newValue){\n      this[`_${name}`] = parseInt(newValue);\n      this._updateNavRuler();\n    }\n  }\n\n  _createNavRuler() {\n    this._x = d3.scaleLinear().range([padding.left, width - padding.right]);\n    this._x.domain([1, (this._length + 1)]);\n\n    const svg = d3.select(this)\n      .append('div')\n      .attr('class', '')\n      .append('svg')\n      .attr('id', '')\n      .attr('width', width)\n      .attr('height', (height));\n\n    const xAxis = d3.axisBottom(this._x);\n\n    this._startLabel = svg.append(\"text\")\n                        .attr('class', 'start-label')\n                        .attr('x', 0)\n                        .attr('y', height - padding.bottom);\n\n    this._endLabel = svg.append(\"text\")\n                      .attr('class', 'end-label')\n                      .attr('x', width)\n                      .attr('y', height - padding.bottom)\n                      .attr('text-anchor', 'end');\n    svg.append('g')\n      .attr('class', 'x axis')\n      .call(xAxis);\n\n    this._viewport = d3.brushX().extent([\n        [padding.left, 0],\n        [(width - padding.right), height*0.51]\n      ])\n      .on(\"brush\", () => {\n        if (d3.event.selection){\n          this._start = d3.format(\"d\")(this._x.invert(d3.event.selection[0]));\n          this._end = d3.format(\"d\")(this._x.invert(d3.event.selection[1]));\n          this.dispatchEvent(new CustomEvent(\"change\", {\n            detail: {value: this._start, type: 'start'}\n          }));\n          this.dispatchEvent(new CustomEvent(\"change\", {\n            detail: {value: this._end, type: 'end'},\n          }));\n          this._updateLabels();\n          this._updatePolygon();\n        }\n      });\n\n    this._brushG = svg.append(\"g\")\n      .attr(\"class\", \"brush\")\n      .call(this._viewport);\n\n    this._brushG\n      .call(this._viewport.move, [this._x(this._start), this._x(this._end)]);\n\n    this.polygon = svg.append(\"polygon\")\n      .attr('class', 'zoom-polygon')\n      .attr('fill', '#777')\n      .attr('fill-opacity','0.3');\n    this._updateNavRuler();\n  }\n  _updateNavRuler(){\n    this._updatePolygon();\n    this._updateLabels();\n    if (this._brushG) this._brushG\n      .call(this._viewport.move, [this._x(this._start), this._x(this._end)]);\n  }\n  _updateLabels() {\n    if (this._startLabel) this._startLabel.text(this._start);\n    if (this._endLabel) this._endLabel.text(this._end);\n  }\n  _updatePolygon(){\n    if (this.polygon) this.polygon\n      .attr('points',\n        `${this._x(this._start)},${height/2}\n        ${this._x(this._end)},${height/2}\n        ${width-padding.right},${height}\n        ${padding.left},${height}`\n      );\n  }\n}\n\nexport default ProtVistaNavigation;\n","import ProtVistaNavigation from './protvista-navigation';\n\nif (window.customElements) {\n  customElements.define('protvista-navigation', ProtVistaNavigation);\n}\n\nexport default ProtVistaNavigation;\n"],"names":["height","width","padding","ProtVistaNavigation","HTMLElement","_length","parseInt","getAttribute","_start","_end","_highlightStart","_highlightEnd","_createNavRuler","observedAttributes","name","oldValue","newValue","_updateNavRuler","_x","d3","range","left","right","domain","svg","append","attr","xAxis","_startLabel","bottom","_endLabel","call","_viewport","extent","on","selection","invert","dispatchEvent","CustomEvent","value","type","_updateLabels","_updatePolygon","_brushG","move","polygon","text","window","customElements","define"],"mappings":"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"}