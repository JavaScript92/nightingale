{"version":3,"file":"protvista-variation-graph.js","sources":["../src/main.js"],"sourcesContent":["import ProtVistaTrack from 'protvista-track';\nimport {\n    scaleLinear,\n    scalePoint,\n    axisLeft,\n    axisRight,\n    select,\n    event as d3Event,\n    line,\n    extent,\n    max,\n    curveBasis\n} from 'd3';\n\nconst loadComponent = function() {\n    class ProtvistaVariationGraph extends ProtVistaTrack {\n\n        constructor() {\n            super();\n        }\n\n        connectedCallback() {\n            super.connectedCallback();\n\n            this._data = undefined;\n\n            this._margin = {\n                top: 20,\n                bottom: 10,\n                right: 10,\n                left: 10\n            }\n\n            this._height = parseInt(this.getAttribute('height')) || 60;\n            this._width = parseInt(this.getAttribute('width')) || 800;\n// console.log(\"++ w/h:\", this._width, this._height);\n            // const bbox = select(this).node().getBoundingClientRect();\n            // console.log(\"bbox:\", bbox);\n            // this._width = bbox.width;\n            // this._height = bbox.height;\n\n            this._xScale = scaleLinear();\n            this._yScale = scaleLinear();\n            this._xExtent;\n            this._yExtent;\n\n            this._totals_line = line()\n                .x(d => this._xScale(d.x))\n                .y(d => this._yScale(d.y))\n                .curve(curveBasis);\n\n            this._totals_dataset = {};\n\n            this._disease_line = line()\n                .x(d => this._xScale(d.x))\n                .y(d => this._yScale(d.y))\n                .curve(curveBasis);\n\n            this._disease_dataset = {};\n\n            this._non_disease_line = line()\n                .x(d => this._xScale(d.x))\n                .y(d => this._yScale(d.y))\n                .curve(curveBasis);\n\n            this._non_disease_dataset = {};\n        }\n\n        attributeChangedCallback(attrName, oldVal, newVal) {\n            // super.attributeChangedCallback(attrName, oldVal, newVal);\n            console.log('attr changed:', attrName, oldVal, newVal);\n        }\n\n        set data(data) {\n            console.log('data:', data);\n            // this._data = this.normalizeLocations(data);\n            this._data = data;\n\n            this._data.features\n                .forEach(r => {\n                    if ('undefined' === typeof this._totals_dataset[r.begin]) {\n                        this._totals_dataset[r.begin] = 0;\n                    }\n\n                    if ('undefined' === typeof this._disease_dataset[r.begin]) {\n                        this._disease_dataset[r.begin] = 0;\n                    }\n\n                    if ('undefined' === typeof this._non_disease_dataset[r.begin]) {\n                        this._non_disease_dataset[r.begin] = 0;\n                    }\n\n                    this._totals_dataset[r.begin]++;\n\n                    if ('undefined' !== typeof r.association) {\n                        r.association\n                            .forEach(a => {\n// console.log(\"disease:\", a);\n                                if (true === a.disease) {\n                                    this._disease_dataset[r.begin]++;\n                                }\n\n                                else if (false === a.disease) {\n                                    this._non_disease_dataset[r.begin]++;\n                                }\n                            })\n                    }\n                });\n\n            this._totals_dataset = this._emptyFillMissingRecords(this._totals_dataset);\n            this._disease_dataset = this._emptyFillMissingRecords(this._disease_dataset);\n            this._non_disease_dataset = this._emptyFillMissingRecords(this._non_disease_dataset);\n\n            // const sortedDiseases = Object.keys(this._disease_dataset)\n            //     .map(k => parseInt(k))\n            //     .sort((a, b) => a - b)\n            //     .map(k => ({\n            //         x: k,\n            //         y: this._disease_dataset[k]\n            //     }));\n\n            // this._disease_dataset = sortedDiseases;\n            \n            // console.log('TOTALS:', this._totals_dataset);\n            // console.log('DISEASES:', this._disease_dataset);\n            // console.log(\"NON-DISEASE:\", this._non_disease_dataset);\n\n            this._createTrack();\n        }\n\n        _emptyFillMissingRecords(dataset) {\n            const sortedTotalsKeys = Object.keys(dataset)\n                .sort((a, b) => parseInt(a) - parseInt(b));\n\n            const totalsMin = sortedTotalsKeys[0];\n            const totalsMax = sortedTotalsKeys[sortedTotalsKeys.length - 1];\n\n            for (let i = totalsMin; i < totalsMax; i++) {\n                if ('undefined' === typeof dataset[i]) {\n                    dataset[i] = 0;\n                }\n            }\n\n            return Object.keys(dataset)\n                .sort((a, b) => parseInt(a) - parseInt(b))\n                .map(k => ({\n                    x: k,\n                    y: dataset[k]\n                }));\n        }\n\n        _createTrack() {\n            super.svg = select(this)\n                .append('svg')\n                // .attr('width', this._width + this._margin.left + this._margin.right)\n                .attr('height', this._height + this._margin.top + this._margin.bottom)\n                .attr('width', this._width)\n                // .attr('height', this._height)\n                // .append('g')\n                //     .attr('transform', `translate(${this._margin.top},${this._margin.left})`);\n                .append('g')\n                    .attr('transform', 'translate(0, 20)');\n\n            super.svg.append('rect')\n                .attr('width', '100%')\n                .attr('height', '100%')\n                .attr('fill', 'white')\n                .attr('stroke-width', '1')\n                .attr('stroke', 'grey')\n                // .attr('transform', `translate(0,0)`);\n\n            // Create the visualisation here\n            this._createFeatures();\n        }\n\n        _createFeatures() {\n\n            this._xExtent = extent(this._totals_dataset, d => parseInt(d.x));\n            this._yExtent = extent(this._totals_dataset, d => d.y);\n\n//             const bbox = select(this).node().getBoundingClientRect();\n// console.log(\"bbox:\", bbox);\nconsole.log(\"width/height:\", this._width, this._height);\n            this._xScale.domain(this._xExtent)\n                .range([0, this._width]);\n            this._yScale.domain(this._yExtent)\n                .range([this._height, 0]);\n\n            super.svg\n                .append('path')\n                .data([this._disease_dataset])\n                .attr('fill', 'none')\n                .attr('stroke', 'red')\n                .attr('stroke-width', '1.5px')\n                .attr('stroke-dasharray', '0')\n                .attr('d', this._disease_line);\n\n            // super.svg\n            //     .append('path')\n            //     .data([this._non_disease_dataset])\n            //     .attr('fill', 'none')\n            //     .attr('stroke', 'yellow')\n            //     .attr('stroke-width', '1.5px')\n            //     .attr('stroke-dasharray', '0')\n            //     .attr('d', this._non_disease_line);\n\n            super.svg\n                .append('path')\n                .data([this._totals_dataset])\n                .attr('fill', 'none')\n                .attr('stroke', 'darkgrey')\n                .attr('stroke-width', '1px')\n                .attr('stroke-dasharray', '.5')\n                .attr('d', this._totals_line);\n        }\n\n        updateScale() {\n            \n        }\n\n    }\n    customElements.define('protvista-variation-graph', ProtvistaVariationGraph);\n};\n\n// Conditional loading of polyfill\nif (window.customElements) {\n    loadComponent();\n} else {\n    document.addEventListener('WebComponentsReady', function() {\n        loadComponent();\n    });\n}\n"],"names":["loadComponent","ProtvistaVariationGraph","_data","undefined","_margin","_height","parseInt","getAttribute","_width","_xScale","scaleLinear","_yScale","_xExtent","_yExtent","_totals_line","line","x","d","y","curve","curveBasis","_totals_dataset","_disease_line","_disease_dataset","_non_disease_line","_non_disease_dataset","attrName","oldVal","newVal","log","dataset","sortedTotalsKeys","Object","keys","sort","a","b","totalsMin","totalsMax","length","i","map","k","select","append","attr","top","bottom","_createFeatures","extent","domain","range","data","features","forEach","r","begin","association","disease","_emptyFillMissingRecords","_createTrack","ProtVistaTrack","define","window","customElements","addEventListener"],"mappings":"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"}