{"version":3,"file":"protvista-variation-graph.js","sources":["../src/protvista-variation-graph.js","../src/index.js"],"sourcesContent":["import ProtVistaTrack from \"protvista-track\";\nimport {\n  scaleLinear,\n  scalePoint,\n  axisLeft,\n  axisRight,\n  select,\n  event as d3Event,\n  line,\n  extent,\n  max,\n  curveBasis\n} from \"d3\";\n\nclass ProtvistaVariationGraph extends ProtVistaTrack {\n  constructor() {\n    super();\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this._data = undefined;\n\n    this._height = parseInt(this.getAttribute(\"height\")) || 40;\n    this._yScale = scaleLinear();\n    this._xExtent;\n    this._yExtent;\n\n    this._totals_line = line()\n      .x(d => this.xScale(d.x))\n      .y(d => this._yScale(d.y))\n      .curve(curveBasis);\n\n    this._totals_dataset = {};\n    this._totals_feature = undefined;\n\n    this._disease_line = line()\n      .x(d => this.xScale(d.x))\n      .y(d => this._yScale(d.y))\n      .curve(curveBasis);\n\n    this._disease_dataset = {};\n    this._disease_feature = undefined;\n  }\n\n  attributeChangedCallback(attrName, oldVal, newVal) {\n    super.attributeChangedCallback(attrName, oldVal, newVal);\n\n    if (!super.svg) {\n      return;\n    }\n  }\n\n  set data(data) {\n    this._data = data;\n\n    this._data.forEach(m => {\n      if (0 >= m.variants.length) {\n        return;\n      }\n\n      m.variants.forEach(v => {\n        if (\"undefined\" === typeof this._totals_dataset[v.begin]) {\n          this._totals_dataset[v.begin] = 0;\n        }\n\n        if (\"undefined\" === typeof this._disease_dataset[v.begin]) {\n          this._disease_dataset[v.begin] = 0;\n        }\n\n        this._totals_dataset[v.begin]++;\n\n        if (\"undefined\" !== typeof v.association) {\n          v.association.forEach(a => {\n            if (true === a.disease) {\n              this._disease_dataset[v.begin]++;\n            }\n          });\n        }\n      });\n    });\n\n    this._totals_dataset = this._emptyFillMissingRecords(this._totals_dataset);\n    this._disease_dataset = this._emptyFillMissingRecords(\n      this._disease_dataset\n    );\n\n    this._createTrack();\n  }\n\n  _emptyFillMissingRecords(dataset) {\n    const sortedTotalsKeys = Object.keys(dataset).sort(\n      (a, b) => parseInt(a) - parseInt(b)\n    );\n\n    const totalsMin = sortedTotalsKeys[0];\n    const totalsMax = sortedTotalsKeys[sortedTotalsKeys.length - 1];\n\n    for (let i = totalsMin; i < totalsMax; i++) {\n      if (\"undefined\" === typeof dataset[i]) {\n        dataset[i] = 0;\n      }\n    }\n\n    return Object.keys(dataset)\n      .sort((a, b) => parseInt(a) - parseInt(b))\n      .map(k => ({\n        x: k,\n        y: dataset[k]\n      }));\n  }\n\n  _createTrack() {\n    super.svg = select(this)\n      .append(\"svg\")\n      .attr(\"width\", this.width)\n      .attr(\"height\", this._height);\n\n    // Create the visualisation here\n    this._createFeatures();\n    this.refresh();\n  }\n\n  _createFeatures() {\n    this._xExtent = extent(this._totals_dataset, d => parseInt(d.x));\n    this._yExtent = extent(this._totals_dataset, d => d.y);\n\n    // just a bit of padding on the top\n    this._yExtent[1] += 2;\n\n    this.xScale.domain(this._xExtent).range([0, this._width]);\n    this._yScale.domain(this._yExtent).range([this._height, 0]);\n  }\n\n  refresh() {\n    super.svg.selectAll(\"path\").remove();\n\n    this._disease_feature = super.svg\n      .append(\"path\")\n      .data([this._disease_dataset])\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"red\")\n      .attr(\"stroke-width\", \"1.5px\")\n      .attr(\"stroke-dasharray\", \"0\")\n      .attr(\"d\", this._disease_line)\n      .attr(\"transform\", \"translate(0,0)\");\n\n    this._totals_feature = super.svg\n      .append(\"path\")\n      .data([this._totals_dataset])\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"darkgrey\")\n      .attr(\"stroke-width\", \"1px\")\n      .attr(\"stroke-dasharray\", \".5\")\n      .attr(\"d\", this._totals_line)\n      .attr(\"transform\", \"translate(0,0)\");\n  }\n}\n\nexport default ProtvistaVariationGraph;\n","import ProtvistaVariationGraph from \"./protvista-variation-graph\";\n\nconst loadComponent = function() {\n  customElements.define(\"protvista-variation-graph\", ProtvistaVariationGraph);\n};\n\n// Conditional loading of polyfill\nif (window.customElements) {\n  loadComponent();\n} else {\n  document.addEventListener(\"WebComponentsReady\", function() {\n    loadComponent();\n  });\n}\n\nexport default ProtvistaVariationGraph;\n"],"names":["ProtvistaVariationGraph","_data","undefined","_height","parseInt","getAttribute","_yScale","scaleLinear","_xExtent","_yExtent","_totals_line","line","x","d","xScale","y","curve","curveBasis","_totals_dataset","_totals_feature","_disease_line","_disease_dataset","_disease_feature","attrName","oldVal","newVal","dataset","sortedTotalsKeys","Object","keys","sort","a","b","totalsMin","totalsMax","length","i","map","k","select","append","attr","width","_createFeatures","refresh","extent","domain","range","_width","selectAll","remove","data","forEach","m","variants","v","begin","association","disease","_emptyFillMissingRecords","_createTrack","ProtVistaTrack","loadComponent","customElements","define","window","document","addEventListener"],"mappings":"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"}